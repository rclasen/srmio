.TH SRMCMD 1 "18 Juli 2009" "SRM access tool" "Version %PACKAGE_VERSION%"
.SH NAME
srmcmd \- download/access your SRM PowerControl

.SH SYNOPSIS
.B srmcmd
[options] \fIpath\fR

.SH DESCRIPTION
.B srmcmd
implemets the serial protocol for SRM's PowerControl V. It allows you to
download data from the PC attached to the serial device at \fIpath\fR and 
adjust the most important settings.

.SH OPTIONS
Options available for the
.B srmcmd
command:
.TP
\fB\-c\fR, \fB\-\-clear\fR
Delete data on PC. Well, actually just mark it as deleted. You're still
able to get it with --get=all.
.TP
\fB\-d\fR, \fB\-\-date\fR
Print start date of recorded data as seconds since 1970-01-01. This is
useful for creating srmwin compatible filenames.
.TP
\fB\-F\fR, \fB\-\-force\fR
Ignore builtin whitelist of known working PCV Firmware versions. This
options might be quite DANGEROUSE if an unknown Firmware expects 
to be addressed differently. Writing unexpected stuff to PCV proved to be
a *BAD* Idea.
.TP
\fB\-x\fR, \fB\-\-fixup\fR
Try to fix time glitches in retrieved data. The PCV sends 11 Tuples in
one 64Byte block. Timestamps are only sent per Block - with a granularity
of 1 sec - so they're always off with recints < 1sec. In addition these 
timestamps often mismatch the time covered by the tuples. With this option
set, timestamps are adjusted to fit the recint and gaps at block boundaries
of up to 2sec are filled with averaged data. That's what srmwin is doing,
It seems wko doesn't ...
.TP
\fB\-g\fR, \fB\-\-get\fR[=all]
Download newly recorded data from PC. With \fIall\fR specified, the
"deletion" on the PCV is ignored and all data (that's not yet overwriten)
is retrieved from the PCV. By default data is written to stdout as
tab-seperated list.
.TP
\fB\-h\fR, \fB\-\-help\fR
A brief message.
.TP
\fB\-i\fR, \fB\-\-int\fR=\fIrecint\fR
Set recording interval. Interval is specified *10. so "10" means 1 sec.
Supported values: 1 to 9 and 10 to 150 in steps of 10.
.TP
\fB\-n\fR, \fB\-\-name\fR
Show athlete name (initials) stored on the PC.
.TP
\fB\-r\fR, \fB\-\-read\fR
instead of accessing the PC, the specified file is read. By default data
is written to stdout as with --get. Both SRM6 and SRM7 formats are
supported.
.TP
\fB\-t\fR, \fB\-\-time\fR
Set the PCs time to the current system time.
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Enable verbose status messages.
.TP
\fB\-V\fR, \fB\-\-version\fR
show srmcmd version number and exit.
.TP
\fB\-w\fR, \fB\-\-write\fR=\fIdestination\fR
Write data retrieved from PC (or with --read from file) to the specified
destination file. Files are written using the SRM7 format.

.SH EXAMPLES
Show name configured in PC:

 srmcmd -n /dev/ttyUSB0		# linux
 srmcmd -n /dev/ttyS1		# cygwin, com1
 srmcmd -n /dev/cu.usbserial*	# Mac OS X, prolific driver (good luck)
 srmcmd -n /dev/cu.PL2303-*	# Mac OS X with http://osx-pl2303.sourceforge.net/

Download data to out.srm, delete data on PC, adjust clock and set recint
to 1sec:

 srmcmd -g -t -i 10 -w out.srm /dev/ttyUSB0

Dump file contents as tab-seperated list:

 srmcmd -r foo.srm

.SH "SEE ALSO"
This is just a very simplistic frontend for the lib. Please check the
source distribution for details.

.SH BUGS
Yes. For sure. Just keep in mind, that protocoll and file formats are
reverse engineered...

.SH AUTHORS
Rainer Clasen
